############################################################################################
dir = "C:/Users/Alexander Looi/Google Drive/Dropbox/NOAA_Wetlands_Ceili-Alex/Alex's Folder/Water level files/WL Data"
setwd(dir)
folder.name = "Oswego StaNum TEST" # Bugged method
if(dir.exists(folder.name) != T){
dir.create(folder.name)
}
dest.folder = paste(dir, "/", folder.name, sep = "")
setwd(dest.folder)
StaNum = 9052030
SiteName = "Oswego"
S.Year = 1900
E.Year = 2014
datum = "IGLD"
units = "metric"
tz = "LST"
file.type = "csv"
product = "daily_mean"
Years = seq(S.Year, E.Year)
for(Y in 1:length(Years)){
S.Date = paste(Years[Y], "0101", sep = "")
E.Date = paste(Years[Y], "1231", sep = "")
URL = paste("https://tidesandcurrents.noaa.gov/api/datagetter?",
"product=", product,"&application=NOS.COOPS.TAC.WL&station=", StaNum,"&",
"begin_date=",S.Date,"&end_date=",E.Date,"&",
"datum=",datum,"&units=",units,"&time_zone=",tz,"&format=",file.type, sep = "")
WL.filename = paste("NOAA ", SiteName, " ", product, " WL_", Years[Y],
".", file.type, sep = "")
download.file(URL, WL.filename)
}
rm(list = ls());
graphics.off();
rm(list = ls());
############################################################################################
dir = "C:/Users/Alexander Looi/Google Drive/Dropbox/NOAA_Wetlands_Ceili-Alex/Alex's Folder/Water level files/WL Data"
setwd(dir)
folder.name = "Oswego StaNum Demo" # Bugged method
if(dir.exists(folder.name) != T){
dir.create(folder.name)
}
dest.folder = paste(dir, "/", folder.name, sep = "")
setwd(dest.folder)
list.files9)
list.files()
WL.files = rep("", length(Years))
Years = seq(S.Year, E.Year)
WL.files = rep("", length(Years))
graphics.off();
rm(list = ls());
############################################################################################
dir = "C:/Users/Alexander Looi/Google Drive/Dropbox/NOAA_Wetlands_Ceili-Alex/Alex's Folder/Water level files/WL Data"
setwd(dir)
folder.name = "Oswego StaNum Demo" # Bugged method
if(dir.exists(folder.name) != T){
dir.create(folder.name)
}
dest.folder = paste(dir, "/", folder.name, sep = "")
setwd(dest.folder)
StaNum = 9052030
SiteName = "Oswego"
S.Year = 1900
E.Year = 2014
datum = "IGLD"
units = "metric"
tz = "LST"
file.type = "csv"
product = "daily_mean"
Years = seq(S.Year, E.Year)
WL.files = rep("", length(Years))
WL.files
WL.files[Y] = WL.filename
graphics.off();
rm(list = ls());
############################################################################################
dir = "C:/Users/Alexander Looi/Google Drive/Dropbox/NOAA_Wetlands_Ceili-Alex/Alex's Folder/Water level files/WL Data"
setwd(dir)
folder.name = "Oswego StaNum Demo" # Bugged method
if(dir.exists(folder.name) != T){
dir.create(folder.name)
}
dest.folder = paste(dir, "/", folder.name, sep = "")
setwd(dest.folder)
StaNum = 9052030
SiteName = "Oswego"
S.Year = 1900
E.Year = 2014
datum = "IGLD"
units = "metric"
tz = "LST"
file.type = "csv"
product = "daily_mean"
Years = seq(S.Year, E.Year)
WL.files = rep("", length(Years))
################################################################################
# Download the data #
################################################################################
for(Y in 1:length(Years)){
S.Date = paste(Years[Y], "0101", sep = "")
E.Date = paste(Years[Y], "1231", sep = "")
URL = paste("https://tidesandcurrents.noaa.gov/api/datagetter?",
"product=", product,"&application=NOS.COOPS.TAC.WL&station=", StaNum,"&",
"begin_date=",S.Date,"&end_date=",E.Date,"&",
"datum=",datum,"&units=",units,"&time_zone=",tz,"&format=",file.type, sep = "")
WL.filename = paste("NOAA ", SiteName, " ", product, " WL_", Years[Y],
".", file.type, sep = "")
WL.files[Y] = WL.filename
download.file(URL, WL.filename)
}
WL.files
f = 1
WL.file = read.csv(WL.files[f], header = T)
graphics.off();
rm(list = ls());
############################################################################################
dir = "C:/Users/Alexander Looi/Google Drive/Dropbox/NOAA_Wetlands_Ceili-Alex/Alex's Folder/Water level files/WL Data"
setwd(dir)
folder.name = "Oswego StaNum Demo" # Bugged method
if(dir.exists(folder.name) != T){
dir.create(folder.name)
}
dest.folder = paste(dir, "/", folder.name, sep = "")
setwd(dest.folder)
StaNum = 9052030
SiteName = "Oswego"
S.Year = 1900
E.Year = 2014
datum = "IGLD"
units = "metric"
tz = "LST"
file.type = "csv"
product = "daily_mean"
Years = seq(S.Year, E.Year)
WL.files = rep("", length(Years))
################################################################################
# Download the data #
################################################################################
for(Y in 1:length(Years)){
S.Date = paste(Years[Y], "0101", sep = "")
E.Date = paste(Years[Y], "1231", sep = "")
URL = paste("https://tidesandcurrents.noaa.gov/api/datagetter?",
"product=", product,"&application=NOS.COOPS.TAC.WL&station=", StaNum,"&",
"begin_date=",S.Date,"&end_date=",E.Date,"&",
"datum=",datum,"&units=",units,"&time_zone=",tz,"&format=",file.type, sep = "")
WL.filename = paste("NOAA ", SiteName, " ", product, " WL_", Years[Y],
".", file.type, sep = "")
WL.files[Y] = WL.filename
download.file(URL, WL.filename)
}
#############################################################
# 1) Combine all the data files into one large table
# 2) Find missing data and flag and replace
#############################################################
for (f in 1:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
}
f =1
WL.file = read.csv(WL.files[f], header = T)
30/4.2
60*((30/4.2)-7)
WL.file = read.csv(WL.files[f], header = T)
WL.file
class(WL.file$Date.Time)
require(lubridate)
ymd_hm(WL.file$Date.Time)
ymd_hm(WL.file$Date.Time, tz = "EST")
Date_Time = ymd_hm(WL.file$Date.Time, tz = "EST")
Date.Time = ymd_hm(WL.file$Date.Time, tz = "EST")
Date.Time
seq(Date.Time[1], Date.Time[length(Date.Time)])
Date.Time[1]
Date.Time[length(Date.Time)]
seq.Date(Date.Time[1], Date.Time[length(Date.Time)])
seq(Date.Time[1], Date.Time[length(Date.Time)], by = "day")
check_dates = seq(Date.Time[1], Date.Time[length(Date.Time)], by = "day")
check_dates %in% Date.Time
check_dates
Date.Time
check.vec = which(check_dates %in% Date.Time)
WL = WL.file(check.vec)
WL = WL.file$Water.Level[check.vec]
WL
Date.Time = c()
Date.Time
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
c(Date.Time, )
c(Date.Time, Date.Time.T)
class(c(Date.Time, Date.Time.T))
class(Date.Time.T)
check_dates
check_dates = seq(Date.Time[1], Date.Time[length(Date.Time)], by = "day")
check_dates = seq(Date.Time[1], Date.Time[length(Date.Time)], by = "day")
Date.Time
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time)], by = "day")
Date.Time.T
Date.Time.T[1]
Date.Time.T[length(Date.Time)]
Date.Time
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check_dates
c(1:10) %in% c(4:6)
which(c(1:10) %in% c(4:6))
c(Date.Time, Date.Time.T)
as.POSIXct(c(Date.Time, Date.Time.T))
Date.Time
f
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check.vec = which(check_dates %in% Date.Time)
# for(d in 1:length(check_dates)){
#
# }
WL.T = WL.file$Water.Level[check.vec]
if(f==1) {Date.Time = Date.Time.T} else {
as.POSIXct(c(Date.Time, Date.Time.T))}
Date.Time
f = 2
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check.vec = which(check_dates %in% Date.Time)
# for(d in 1:length(check_dates)){
#
# }
WL.T = WL.file$Water.Level[check.vec]
if(f==1) {Date.Time = Date.Time.T} else {
as.POSIXct(c(Date.Time, Date.Time.T))}
if(f==1) {
Date.Time = Date.Time.T
} else {
Date.Time = c(Date.Time, Date.Time.T)
}
Date.Time
for (f in 1:8){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check.vec = which(check_dates %in% Date.Time)
# for(d in 1:length(check_dates)){
#
# }
WL.T = WL.file$Water.Level[check.vec]
if(f==1) {
Date.Time = check_dates
} else {
Date.Time = c(Date.Time, check_dates)
}
}
Date.Time
WL.T
WL.file$Water.Level[check.vec]
f
f = 4
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check.vec = which(check_dates %in% Date.Time)
WL.T = WL.file$Water.Level[check.vec]
WL.T
WL.T = WL.file$Water.Level[check.vec]
f
WL.file = read.csv(WL.files[f], header = T)
WL.file
f = 5
WL.file = read.csv(WL.files[f], header = T)
WL.file
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
Date.Time.T
class(Date.Time)
class(WL.file)
class(WL.file$1)
class(WL.file[1,])
WL.file[1,]
WL.file[,1]
WL.file[,2]
WL.file[,3]
WL.file[,1:3]
is.na(WL.file)
f = 4
WL.file = read.csv(WL.files[f], header = T)
is.na(WL.file)
length(Years
)
7:length(Years)
for (f in 7:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check.vec = which(check_dates %in% Date.Time)
# for(d in 1:length(check_dates)){
#
# }
WL.T = WL.file$Water.Level[check.vec]
if(f==1) {
Date.Time = check_dates
WL = WL.T
} else {
Date.Time = c(Date.Time, check_dates)
WL = c(WL, WL.T)
}
}
WL.file
f
WL
WL
Date.Time
for (f in 7:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check.vec = which(check_dates %in% Date.Time)
# for(d in 1:length(check_dates)){
#
# }
WL.T = WL.file$Water.Level[check.vec]
if(f==7) {
Date.Time = check_dates
WL = WL.T
} else {
Date.Time = c(Date.Time, check_dates)
WL = c(WL, WL.T)
}
}
WL
WL.T
WL.file$Water.Level
check.vec
for (f in 7:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
check_dates = seq(Date.Time.T[1], Date.Time.T[length(Date.Time.T)], by = "day")
check.vec = which(check_dates %in% Date.Time.T)
# for(d in 1:length(check_dates)){
#
# }
WL.T = WL.file$Water.Level[check.vec]
if(f==7) {
Date.Time = check_dates
WL = WL.T
} else {
Date.Time = c(Date.Time, check_dates)
WL = c(WL, WL.T)
}
}
WL
Date.Time
WL
which(is.na(WL))
WL
data.frame(Date.Time, WL)
Date.Time.T[1]
Years[f]
CDateS = paste(Years[f], "-01-01", sep = "")
check_dates
for (f in 7:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
CDateS = paste(Years[f], "-01-01", sep = "")
CDateE = paste(Years[f], "-12-31", sep = "")
check_dates = seq(CDateS, CDateE, by = "day")
check.vec = which(check_dates %in% Date.Time.T)
WL.T = WL.file$Water.Level[check.vec]
if(f==7) {
Date.Time = check_dates
WL = WL.T
} else {
Date.Time = c(Date.Time, check_dates)
WL = c(WL, WL.T)
}
}
f
CDateS = as.POSIXct(paste(Years[f], "-01-01", sep = ""))
CDateE = as.POSIXct(paste(Years[f], "-12-31", sep = ""))
check_dates = seq(CDateS, CDateE, by = "day")
for (f in 7:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
CDateS = as.POSIXct(paste(Years[f], "-01-01", sep = ""))
CDateE = as.POSIXct(paste(Years[f], "-12-31", sep = ""))
check_dates = seq(CDateS, CDateE, by = "day")
check.vec = which(check_dates %in% Date.Time.T)
WL.T = WL.file$Water.Level[check.vec]
if(f==7) {
Date.Time = check_dates
WL = WL.T
} else {
Date.Time = c(Date.Time, check_dates)
WL = c(WL, WL.T)
}
}
WL
Date.Time
data.frame(Date.Time, WL)
check_dates %in% Date.Time.T
WL.files
f = 50
WL.file = read.csv(WL.files[f], header = T)
WL.file
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
Date.Time.T
CDateS = as.POSIXct(paste(Years[f], "-01-01", sep = ""))
CDateE = as.POSIXct(paste(Years[f], "-12-31", sep = ""))
CDateS
CDateE
check_dates = seq(CDateS, CDateE, by = "day")
check_dates
check.vec = which(check_dates %in% Date.Time.T)
check.vec
check_dates %in% Date.Time.T
WL.T = rep(0, length(check_dates))
WL.T
check.vec = which(check_dates %in% Date.Time.T)
WL.T = WL.file$Water.Level[check.vec]
WL.T = rep(NA, length(check_dates))
WL.T = WL.file$Water.Level[check.vec]
WL.T
check.vec = which(check_dates %in% Date.Time.T)
check_dates
Date.Time.T
check_dates
check_dates %in% Date.Time.T
for (f in 7:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
CDateS = as.POSIXct(paste(Years[f], "-01-01", sep = ""))
CDateE = as.POSIXct(paste(Years[f], "-12-31", sep = ""))
check_dates = seq(CDateS, CDateE, by = "day")
check.vec = which(check_dates %in% Date.Time.T)
WL.T = rep(NA, length(check_dates))
WL.T = WL.file$Water.Level[check.vec]
if(f==7) {
Date.Time = check_dates
WL = WL.T
} else {
Date.Time = c(Date.Time, check_dates)
WL = c(WL, WL.T)
}
}
WL
length(WL)
WL.T
f = 50
WL.file = read.csv(WL.files[f], header = T)
WL.file
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
Date.Time.T = ymd(WL.file$Date.Time, tz = "EST")
Date.Time.T = ymd_hm(WL.file$Date.Time, tz = "EST")
ymd_hm
Date.Time.T
format(Date.Time.T, "%Y-%m-%d")
class(format(Date.Time.T, "%Y-%m-%d"))
format(Date.Time.T, "%Y-%m-%d")
seq(CDateS, CDateE, by = "day")
check_dates = format(seq(CDateS, CDateE, by = "day"), "%Y-%m-%d")
check_dates
check.vec = which(check_dates %in% Date.Time.T)
check.vec
check_dates
Date.Time.T
Date.Time.T = ymd_hm(WL.file$Date.Time)
Date.Time.T = format(Date.Time.T, "%Y-%m-%d")
Date.Time.T
CDateS = as.POSIXct(paste(Years[f], "-01-01", sep = ""))
CDateE = as.POSIXct(paste(Years[f], "-12-31", sep = ""))
check_dates = format(seq(CDateS, CDateE, by = "day"), "%Y-%m-%d")
check.vec = which(check_dates %in% Date.Time.T)
check.vec
Date.Time.T
check_dates
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time)
Date.Time.T = format(Date.Time.T, "%Y-%m-%d")
CDateS = as.POSIXct(paste(Years[f], "-01-01", sep = ""))
CDateE = as.POSIXct(paste(Years[f], "-12-31", sep = ""))
check_dates = format(seq(CDateS, CDateE, by = "day"), "%Y-%m-%d")
check.vec = which(check_dates %in% Date.Time.T)
check.vec
check_dates %in% Date.Time.T
WL.T = rep(NA, length(check_dates))
WL.T
WL.T = WL.file$Water.Level[check.vec]
WL.T
check.vec
WL.file$Water.Level
for (f in 7:length(Years)){
WL.file = read.csv(WL.files[f], header = T)
Date.Time.T = ymd_hm(WL.file$Date.Time)
Date.Time.T = format(Date.Time.T, "%Y-%m-%d")
CDateS = as.POSIXct(paste(Years[f], "-01-01", sep = ""))
CDateE = as.POSIXct(paste(Years[f], "-12-31", sep = ""))
check_dates = format(seq(CDateS, CDateE, by = "day"), "%Y-%m-%d")
check.vec = which(check_dates %in% Date.Time.T)
WL.T = rep(NA, length(check_dates))
WL.T[check.vec] = WL.file$Water.Level[check.vec]
if(f==7) {
Date.Time = check_dates
WL = WL.T
} else {
Date.Time = c(Date.Time, check_dates)
WL = c(WL, WL.T)
}
}
WL
length(WL)
WL.Sta = data.frame(Date.Time, WL)
WL.Sta
is.na(WL)
which(is.na(WL))
WL.na = which(is.na(WL))
WL.na
n = 1
x = 1
